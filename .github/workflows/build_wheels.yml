name: Build Wheels

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Copy Windows DLLs to package directory
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Copy-Item -Path "C:\Julia\bin\libgomp-1.dll" -Destination "python\chils\libgomp-1.dll"
          Copy-Item -Path "C:\Julia\bin\libwinpthread-1.dll" -Destination "python\chils\libwinpthread-1.dll"
          Copy-Item -Path "C:\Julia\bin\libgcc_s_seh-1.dll" -Destination "python\chils\libgcc_s_seh-1.dll"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_BUILD: cp310-*
          CIBW_SKIP: "*-musllinux_*"
          CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: 'delvewheel repair -w {dest_dir} {wheel}'
        with:
          output-dir: wheels

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheels